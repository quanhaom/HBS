package frame;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class EditPro extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JTextField nameField;
    private JTextField dobField;
    private JTextField phoneField;
    private JTextField idCardField;
    private CustomerFrame customerFrame;

    public EditPro(CustomerFrame customerFrame) {
        this.customerFrame = customerFrame;

        setTitle("Edit Profile");
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridLayout(7, 2));

        // Add fields for editing customer information
        add(new JLabel("Username:"));
        usernameField = new JTextField();
        add(usernameField);

        add(new JLabel("Password:"));
        passwordField = new JPasswordField();
        add(passwordField);

        add(new JLabel("Name:"));
        nameField = new JTextField();
        add(nameField);

        add(new JLabel("Date of Birth (YYYY-MM-DD):"));
        dobField = new JTextField();
        add(dobField);

        add(new JLabel("Phone:"));
        phoneField = new JTextField();
        add(phoneField);

        add(new JLabel("ID Card:"));
        idCardField = new JTextField();
        add(idCardField);

        // Add buttons for applying changes and canceling
        JButton applyButton = new JButton("Apply Changes");
        JButton cancelButton = new JButton("Cancel");

        applyButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                applyChanges();
            }
        });

        cancelButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose(); // Close the EditPro window
            }
        });

        add(applyButton);
        add(cancelButton);

        // Load current user data into fields (example data; replace with actual data)
        loadCurrentUserData();
    }

    private void loadCurrentUserData() {
        // Assuming you have a method to get the current user's details from the CustomerFrame or a database
        // Here you would replace these example values with actual data retrieved from the user object
        usernameField.setText("currentUsername"); // Replace with actual username
        passwordField.setText("currentPassword"); // Replace with actual password
        nameField.setText("currentName"); // Replace with actual name
        dobField.setText("1990-01-01"); // Replace with actual date of birth
        phoneField.setText("123456789"); // Replace with actual phone number
        idCardField.setText("ID123456"); // Replace with actual ID card number
    }

    private void applyChanges() {
        // Here you would implement the logic to update the user's information in the database
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        String name = nameField.getText();
        String dob = dobField.getText();
        String phone = phoneField.getText();
        String idCard = idCardField.getText();

        // Validate inputs (you might want to add more validation)
        if (username.isEmpty() || password.isEmpty() || name.isEmpty() || dob.isEmpty() || phone.isEmpty() || idCard.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.");
            return;
        }

        // Assume you have a method to update user information in the database
        // updateUserInDatabase(username, password, name, dob, phone, idCard);

        // Notify the user of success
        JOptionPane.showMessageDialog(this, "Profile updated successfully!");

        // Close the EditPro window
        dispose();
    }
}
