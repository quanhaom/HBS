        JButton loginButton = new JButton("Login");
        JButton clearButton = new JButton("Clear");
        JButton dontLoginButton = new JButton("Don't Login");

        // Set up layout
        setLayout(new GridLayout(4, 2)); // Adjusted grid layout
        add(userIdLabel);
        add(userIdField);
        add(passwordLabel);
        add(passwordField);
        add(loginButton);
        add(clearButton);
        add(dontLoginButton);

        // Action listeners
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Login method uses the database-stored user information
                login(userIdField.getText(), new String(passwordField.getPassword()));
            }
        });

        clearButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                userIdField.setText("");
                passwordField.setText("");
            }
        });

        dontLoginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new StrangerFrame(store).setVisible(true);
                dispose();
            }
        });
    }

    private void login(String userId, String password) {
        // Fetch users from the database through the Store's getUsers method
        List<Person> users = store.getUsers(); 
        for (Person user : users) {
            if (user.getId().equals(userId) && user.getPassword().equals(password)) {
                switch (user.getRole()) {
                    case "Employee":
                        new EmployeeFrame(store, this).setVisible(true);
                        break;
                    case "Customer":
                        new CustomerFrame(store, this).setVisible(true);
                        break;
                    case "Manager":
                        new ManagerFrame(store).setVisible(true);
                        break;
                    default:
                        JOptionPane.showMessageDialog(this, "Unknown role: " + user.getRole());
                        return;
                }
                dispose(); // Close the login window after successful login
                return;
            }
        }
        // Show an error message if login fails
        JOptionPane.showMessageDialog(this, "Invalid credentials. Please try again.");
    }

    public static void main(String[] args) {
        Store store = new Store(); // Initialize Store with database connection
        LoginFrame loginFrame = new LoginFrame(store); // Create LoginFrame
        loginFrame.setVisible(true); // Make frame visible
    }
}
