import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

public class EmpmanaFrame extends JFrame {
    private JTable employeeTable;
    private EmployeeTableModel tableModel; // Model cho bảng nhân viên
    private JButton addButton, editButton, removeButton;
    private JTextField searchField;
    private JComboBox<String> sortOptions;
    private List<Employee> employees; // Danh sách nhân viên

    public EmpmanaFrame() {
        setTitle("Employee Management");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Khởi tạo danh sách nhân viên
        employees = new ArrayList<>();
        tableModel = new EmployeeTableModel(employees);
        employeeTable = new JTable(tableModel); // Sử dụng EmployeeTableModel
        JScrollPane scrollPane = new JScrollPane(employeeTable);
        add(scrollPane, BorderLayout.CENTER);

        // Tạo panel cho các nút và tìm kiếm
        JPanel actionPanel = new JPanel();
        add(actionPanel, BorderLayout.SOUTH);

        searchField = new JTextField(15);
        actionPanel.add(searchField);

        addButton = new JButton("Add Employee");
        actionPanel.add(addButton);
        addButton.addActionListener(e -> addEmployee());

        editButton = new JButton("Edit Employee");
        actionPanel.add(editButton);
        editButton.addActionListener(e -> editEmployee());

        removeButton = new JButton("Remove Employee");
        actionPanel.add(removeButton);
        removeButton.addActionListener(e -> removeEmployee());

        // Thêm tùy chọn sắp xếp
        sortOptions = new JComboBox<>(new String[]{"Sort by Name", "Sort by ID"});
        sortOptions.addActionListener(e -> updateSortedEmployeeDisplay());
        actionPanel.add(sortOptions);

        setSize(600, 400);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void addEmployee() {
        // Cài đặt chức năng để thêm nhân viên
        // Có thể sử dụng một dialog để lấy thông tin
        // Ví dụ:
        String name = JOptionPane.showInputDialog("Enter Name:");
        String dob = JOptionPane.showInputDialog("Enter Date of Birth (YYYY-MM-DD):");
        String phone = JOptionPane.showInputDialog("Enter Phone:");
        String idCard = JOptionPane.showInputDialog("Enter ID Card:");
        int workingHours = Integer.parseInt(JOptionPane.showInputDialog("Enter Working Hours:"));
        
        // Tạo đối tượng Employee mới (bạn cần phải lấy userId từ cơ sở dữ liệu)
        Employee newEmployee = new Employee(employees.size() + 1, name, dob, phone, idCard, workingHours);
        employees.add(newEmployee);
        tableModel.setEmployees(employees); // Cập nhật bảng
    }

    private void editEmployee() {
        // Cài đặt chức năng để chỉnh sửa thông tin nhân viên
        int selectedRow = employeeTable.getSelectedRow();
        if (selectedRow >= 0) {
            Employee employee = employees.get(selectedRow);
            String name = JOptionPane.showInputDialog("Enter Name:", employee.getName());
            String dob = JOptionPane.showInputDialog("Enter Date of Birth (YYYY-MM-DD):", employee.getDob());
            String phone = JOptionPane.showInputDialog("Enter Phone:", employee.getPhone());
            String idCard = JOptionPane.showInputDialog("Enter ID Card:", employee.getIdCard());
            int workingHours = Integer.parseInt(JOptionPane.showInputDialog("Enter Working Hours:", employee.getWorkingHours()));
            
            // Cập nhật thông tin nhân viên
            employee.setName(name);
            employee.setDob(dob);
            employee.setPhone(phone);
            employee.setIdCard(idCard);
            employee.setWorkingHours(workingHours);
            tableModel.setEmployees(employees); // Cập nhật bảng
        } else {
            JOptionPane.showMessageDialog(this, "Please select an employee to edit.");
        }
    }

    private void removeEmployee() {
        // Cài đặt chức năng để xóa nhân viên
        int selectedRow = employeeTable.getSelectedRow();
        if (selectedRow >= 0) {
            employees.remove(selectedRow);
            tableModel.setEmployees(employees); // Cập nhật bảng
        } else {
            JOptionPane.showMessageDialog(this, "Please select an employee to remove.");
        }
    }

    private void updateSortedEmployeeDisplay() {
        // Cài đặt chức năng để sắp xếp hiển thị nhân viên
        // Bạn có thể thực hiện sắp xếp trên danh sách `employees` tại đây
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(EmpmanaFrame::new);
    }
}
