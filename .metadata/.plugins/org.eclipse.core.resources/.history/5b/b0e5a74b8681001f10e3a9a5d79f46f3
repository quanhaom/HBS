package frame;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionListener;

public class EmpmanaFrame extends JFrame {
    private JTable employeeTable;
    private DefaultTableModel tableModel; // Mô hình cho bảng
    private JButton addButton, editButton, removeButton;
    private JTextField searchField;
    private JComboBox<String> sortOptions;

    public EmpmanaFrame() {
        setTitle("Employee Management");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Tạo mô hình dữ liệu cho bảng
        String[] columnNames = {"ID", "Username", "Name", "DOB", "Phone", "ID Card", "Working Hours", "Salary"};
        tableModel = new DefaultTableModel(columnNames, 0);
        employeeTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(employeeTable);
        add(scrollPane, BorderLayout.CENTER);

        // Tạo panel cho các nút và tìm kiếm
        JPanel actionPanel = new JPanel();
        add(actionPanel, BorderLayout.SOUTH);

        searchField = new JTextField(15);
        actionPanel.add(searchField);

        addButton = new JButton("Add Employee");
        actionPanel.add(addButton);
        addButton.addActionListener(e -> addEmployee());

        editButton = new JButton("Edit Employee");
        actionPanel.add(editButton);
        editButton.addActionListener(e -> editEmployee());

        removeButton = new JButton("Remove Employee");
        actionPanel.add(removeButton);
        removeButton.addActionListener(e -> removeEmployee());

        // Thêm tùy chọn sắp xếp
        sortOptions = new JComboBox<>(new String[]{"Sort by Name", "Sort by ID"});
        sortOptions.addActionListener(e -> updateSortedEmployeeDisplay());
        actionPanel.add(sortOptions);

        setSize(800, 600);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void addEmployee() {
        // Mở hộp thoại để nhập thông tin nhân viên
        String id = JOptionPane.showInputDialog(this, "Enter ID:");
        String username = JOptionPane.showInputDialog(this, "Enter Username:");
        String name = JOptionPane.showInputDialog(this, "Enter Name:");
        String dob = JOptionPane.showInputDialog(this, "Enter Date of Birth (YYYY-MM-DD):");
        String phone = JOptionPane.showInputDialog(this, "Enter Phone:");
        String idCard = JOptionPane.showInputDialog(this, "Enter ID Card:");
        String workingHours = JOptionPane.showInputDialog(this, "Enter Working Hours:");
        String salary = JOptionPane.showInputDialog(this, "Enter Salary:");

        // Thêm thông tin vào bảng
        tableModel.addRow(new Object[]{id, username, name, dob, phone, idCard, workingHours, salary});
    }

    private void editEmployee() {
        int selectedRow = employeeTable.getSelectedRow();
        if (selectedRow != -1) {
            // Lấy thông tin của nhân viên đã chọn và mở hộp thoại để chỉnh sửa
            String id = (String) tableModel.getValueAt(selectedRow, 0);
            String username = (String) tableModel.getValueAt(selectedRow, 1);
            String name = (String) tableModel.getValueAt(selectedRow, 2);
            String dob = (String) tableModel.getValueAt(selectedRow, 3);
            String phone = (String) tableModel.getValueAt(selectedRow, 4);
            String idCard = (String) tableModel.getValueAt(selectedRow, 5);
            String workingHours = (String) tableModel.getValueAt(selectedRow, 6);
            String salary = (String) tableModel.getValueAt(selectedRow, 7);

            // Mở hộp thoại để chỉnh sửa
            username = JOptionPane.showInputDialog(this, "Edit Username:", username);
            name = JOptionPane.showInputDialog(this, "Edit Name:", name);
            dob = JOptionPane.showInputDialog(this, "Edit Date of Birth (YYYY-MM-DD):", dob);
            phone = JOptionPane.showInputDialog(this, "Edit Phone:", phone);
            idCard = JOptionPane.showInputDialog(this, "Edit ID Card:", idCard);
            workingHours = JOptionPane.showInputDialog(this, "Edit Working Hours:", workingHours);
            salary = JOptionPane.showInputDialog(this, "Edit Salary:", salary);

            // Cập nhật thông tin trong bảng
            tableModel.setValueAt(username, selectedRow, 1);
            tableModel.setValueAt(name, selectedRow, 2);
            tableModel.setValueAt(dob, selectedRow, 3);
            tableModel.setValueAt(phone, selectedRow, 4);
            tableModel.setValueAt(idCard, selectedRow, 5);
            tableModel.setValueAt(workingHours, selectedRow, 6);
            tableModel.setValueAt(salary, selectedRow, 7);
        } else {
            JOptionPane.showMessageDialog(this, "Please select an employee to edit.");
        }
    }

    private void removeEmployee() {
        int selectedRow = employeeTable.getSelectedRow();
        if (selectedRow != -1) {
            tableModel.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(this, "Please select an employee to remove.");
        }
    }

    private void updateSortedEmployeeDisplay() {
        // Chức năng sắp xếp có thể được triển khai tại đây
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(EmpmanaFrame::new);
    }
}
